/* Fix for older browsers */
if (!Array.prototype.indexOf) {
    Array.prototype.indexOf = function(obj, start) {
         for (var i = (start || 0), j = this.length; i < j; i++) {
             if (this[i] === obj) { return i; }
         }
         return -1;
    };
}

(function($){

    "use strict";

        jQuery(document).ready(function($){

        /* Menu Position Logic & Hero height for full and half screen
        ================================================== */
        var windowHeight = $(window).height();
        if($("#header-section").data("position") == "hiddenmenu") {
            $('.hero').height( windowHeight );
            var $offset = "0";
        } else if($("#header-section").data("position") == "bottom") {
            $('.hero').height( windowHeight + 80 );
            $('.hero.blog').height( windowHeight );
            var $offset = "80px";
        } else if($("#header-section").data("position") == "top") {
            $('.hero').height( windowHeight );
            var $offset = "80px";
        } else {
            $('.hero').height( windowHeight );
            var $offset = "0";
        }

        if( !device.tablet() && !device.mobile() ) {
            $('.hero-single').height( windowHeight / 2 ); // default height of archive page is 50% of win height.
            $('.hero-single.full').height( windowHeight ); // If admin option is set to full height.
        } else {
            $('.hero-single').height( windowHeight );
        }

        $(window).resize(function() {
            var windowHeight = $(window).height();
            $('.hero').height( windowHeight );
            $('.hero.mvisible').height( windowHeight - 80 ); // add blog class to hero in order to show menu
            if( !device.tablet() && !device.mobile() ) {
                $('.hero-single').height( windowHeight / 2 ); // default height of archive page is 50% of win height.
                    $('.hero-single.full').height( windowHeight ); // If admin option is set to full height.
            } else {
                $('.hero-single').height( windowHeight );
            }
        });

        /* Main Menu - Show/Hide on Scroll
        ==================================================================================== */

        $("#menu-place").waypoint(function(direction) {
            var $header = $('#header-section');
            if (direction === 'down') {
                $header.removeClass("gore");
                $header.addClass("dole");
            } else if (direction === 'up') {
                $header.removeClass("dole");
                $header.addClass("gore");
            }
        }, {
            offset: $offset
        });

        /* Responsive Menu - Expand / Collapse on Mobile
        ==================================================================================== */
        function recalculate_height() {
            var nav_height = $(window).outerHeight();
            $("#navigation").height(nav_height - 56);
        }

        $('#menu-toggle-wrapper').on('click', function(event) {
            if($(".ha-header").hasClass("idi-gore")) {
                $(".ha-header").removeClass("idi-gore");
            } else {
                $(".ha-header").addClass("idi-gore");
            }
            recalculate_height();
            $(this).toggleClass('open');
            $("body").toggleClass('open');
            $('#navigation').slideToggle(200);
            event.preventDefault();
        });

        $(window).resize(function() {
            recalculate_height();
        });

        /* Scroll to Main Menu
        ================================================== */
        $('#navigation a[href*="#"]').click( function(event) {
            var $this = $(this);
            var offset = -80;
            if($this.parent().is(':nth-child(2)')) {
                offset = 2; // for second child dont do offset
            };
            $.scrollTo( $this.attr('href') , 650, { easing: 'swing' , offset: offset , 'axis':'y' } );
            event.preventDefault();
            // For mobiles and tablets, do the thing!
            if ($(window).width() < 1025) {
                $('#menu-toggle-wrapper').toggleClass('open');
                $('#navigation').slideToggle(200);
            }
        });
        
        /* Add active class for each nav depending on scroll
        ================================================== */
        $('section').each(function() {
            $(this).waypoint( function( direction ) {
                if( direction === 'down' ) {
                    var containerID = $(this).attr('id');
                    /* update navigation */
                    $('#navigation a').removeClass('active');
                    $('#navigation a[href*="#'+containerID+'"]').addClass('active');
                }
            } , { offset: '80px' } );
            
            $(this).waypoint( function( direction ) {
                if( direction === 'up' ) {
                    var containerID = $(this).attr('id');
                    /* update navigation */
                    $('#navigation a').removeClass('active');
                    $('#navigation a[href*="#'+containerID+'"]').addClass('active');
                }          
            } , { offset: function() { return -$(this).height() - 80; } });
        });

        /* Counter
        ================================================== */
        $('.counter').each(function(){
            var counter = $(this).data('counter');
            var $this = $(this);
            $this.waypoint(function(direction) {
                if( !$(this).hasClass('animated') ) {    
                    $(this).countTo({
                        from: 0,
                        to: counter,
                        speed: 2000,
                        refreshInterval: 100,
                        onComplete: function() {
                            $(this).addClass('animated');
                        }
                    });
                }
            } , { offset: '100%' } );
        });

        /* Scroll to Element on Page
        ================================================== */
        $('a#to-blog').click( function(event) {
            event.preventDefault();
            $.scrollTo( $('#blog') , 1250, {  offset: 1 , 'axis':'y' } );
        });

         $('.hero-btn').click( function(event) {
            var $this = $(this);
            var offset = -80;
            if($this.attr('href') == '#about-us' || $('.nomenu').is(':visible')) {
                offset = 0; // for first section dont do offset
            };
            $.scrollTo( $this.attr('href') , 650, { easing: 'swing' , offset: offset , 'axis':'y' } );
            event.preventDefault();
        });

        /* Typed
        ================================================== */
        $(".element").each(function(){
            var $this = $(this);
            $this.typed({
            strings: $this.attr('data-elements').split(','),
            typeSpeed: 100, // typing speed
            backDelay: 3000, // pause before backspacing
            });
        });

        /* Cycle Through Images on Portfolio
        ================================================== */
        $('.gallery .image-holder').each(function(){
            var $this = $(this);
            
            $this.find('img:first').clone().prependTo(this).addClass('base');
            $this.find('img:eq(1)').addClass('active');
            
            function cycleImages(){
                var $active = ($this.find('.active').length > 0) ? $this.find('.active') : $this.find('img:eq(1)');
                var $next = ($this.find('.active').next().length > 0) ? $this.find('.active').next().not('.base') : $this.find('img').not('.base').first();
                //move the next image up the pile
                $next.css('z-index',2);
                //fade out the top image
                var random = Math.ceil(Math.random() * 10000);
                $active.delay(random).fadeOut(2500,function(){
                    //reset the z-index and unhide the image
                    $active.css('z-index',1).show().removeClass('active');
                    //make the next image the top one
                    $next.css('z-index',3).addClass('active');
                    cycleImages();
                });
            }
            cycleImages();
        });
        
        /* Notification Messages
        ================================================== */
        $('.success,.errormsg,.notice,.general').on('click',function(){
            var $this = $(this);
            $this.hide();
        });

        /* PARALAX and BG Video
        ================================================== */
        if( !device.tablet() && !device.mobile() ) {

            if(jQuery(".player").length && !($("#qLoverlay").length)) {
                jQuery(".player").mb_YTPlayer();
            }

            $('section[data-type="parallax"]').each(function(){
                $(this).parallax("50%", 0.4);
            });

            /* fixed background on mobile devices */
            $('section[data-type="parallax"]').each(function(index, element) {
                $(this).addClass('fixed');
            });

            $('.bannercontainer').addClass('hero-fixed');
            $('#home-content').addClass('hero-fixed');
                
        }

        /* OWL Carousel
        ================================================== */
        $(".home-slider").owlCarousel({
            transitionStyle: "backSlide",
            slideSpeed: 350,
            singleItem: true,
            autoHeight: true,
            navigation: true,
            navigationText: ["<i class='fa fa-angle-left'></i>", "<i class='fa fa-angle-right'></i>"]
        });

        $(".mfp-iframe").magnificPopup({
            mainClass: 'mfp-carousel',
            gallery: {
                enabled: false
            }
        });
        
        $(".twitter-container").owlCarousel({
            slideSpeed : 300,
            paginationSpeed : 400,
            singleItem : true,
            autoPlay : 8000,
            autoHeight : true
        });
        
        $(".testimonial-container, .logos-container").each(function(){
            var opts = $(this).attr('data-per-page') == '1' ? {
                singleItem : true,
            } : {
                items : $(this).attr('data-per-page')
            };
            
            if($(this).hasClass('no-owl-nav')) {
                opts.pagination = false;
                opts.navigation = false;
            }
            
            $(this).owlCarousel($.extend({
                slideSpeed : 300,
                paginationSpeed : 400,
                autoPlay : 8000,
                autoHeight : true
            }, opts));
        
        });
        
        $(".slider").owlCarousel({
            slideSpeed : 300,
            paginationSpeed : 400,
            singleItem : true,
            autoPlay : 8000,
            autoHeight : true
        });


        /* Circular and Line Progress bar 
        ================================================== */
        $('.chart').each(function(){
            var $this = $(this);
            var color = $(this).data('scale-color');

            setTimeout(function() {
                $this.filter(':visible').waypoint(function(direction) {
                    $(this).easyPieChart({
                        barColor: color,
                        trackColor: '#c4c4c4',
                        onStep: function(from, to, percent) {
                            jQuery(this.el).find('.percent').text(Math.round(percent));
                        }
                    });
                } , { offset: '100%' } );
            }, 500);

        });

        $('.progress-bar > span').each(function(){
            var $this = $(this);
            var width = $(this).data('percent');
            $this.css({
                'transition' : 'width 1.5s'
            });
            
            setTimeout(function() {
                $this.filter(':visible').waypoint(function(direction) {
                    if( direction === 'down' ) {
                        $this.css('width', width + '%');
                    }
                } , { offset: '100%' } );
            }, 500);
        });

        /* Contact Form
        ================================================== */
        (function(e){function n(e,n){this.$form=e;this.indexes={};this.options=t;for(var r in n){if(this.$form.find("#"+r).length&&typeof n[r]=="function"){this.indexes[r]=n[r]}else{this.options[r]=n[r]}}this.init()}var t={_error_class:"error",_onValidateFail:function(){}};n.prototype={init:function(){var e=this;e.$form.on("submit",function(t){e.process();if(e.hasErrors()){e.options._onValidateFail();t.stopImmediatePropagation();return false}return true})},notEmpty:function(e){return e!=""?true:false},isEmail:function(e){return/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)},isUrl:function(e){var t=new RegExp("(^(http[s]?:\\/\\/(www\\.)?|ftp:\\/\\/(www\\.)?|(www\\.)?))[\\w-]+(\\.[\\w-]+)+([\\w-.,@?^=%&:/~+#-]*[\\w@?^=%&;/~+#-])?","gim");return t.test(e)},elClass:"",setClass:function(e){this.elClass=e},process:function(){this._errors={};for(var t in this.indexes){this.$el=this.$form.find("#"+t);if(this.$el.length){var n=e.proxy(this.indexes[t],this,e.trim(this.$el.val()))();if(this.elClass){this.elClass.toggleClass(this.options._error_class,!n);this.elClass=""}else{this.$el.toggleClass(this.options._error_class,!n)}if(!n){this._errors[t]=n}}this.$el=null}},_errors:{},hasErrors:function(){return!e.isEmptyObject(this._errors)}};e.fn.isValid=function(t){return this.each(function(){var r=e(this);if(!e.data(r,"is_valid")){e.data(r,"is_valid",new n(r,t))}})}})(jQuery)

        
        /**
         * Newsletter sign up form 
         */
        $('.iva_mc_form').each(function(){
            var $this = $(this),
                $notification = $this.find('.notification'),
                validateObj = {
                    '_error_class' : 'error'
                };
            
            validateObj[$this.find('[name="email"]').attr('id')] = function(data) {
                this.setClass(this.$el.parent());
                return this.isEmail(data);
            };
            
            $this.isValid(validateObj).submit(function(e){
                e.preventDefault();
                
                $notification.attr('class', 'notification').text('');
                
                $.ajax({
                    'url' : $this.attr('action'),
                    'type' : 'POST',
                    'dataType' : 'json',
                    'data' : $this.serialize()
                }).done(function(response){
                    
                    if(typeof response.type != 'undefined' && typeof response.message != 'undefined') {
                        $notification.addClass(response.type)
                            .text(response.message);
    
                        if(response.type == 'success') {
                            $this.find('input[type="text"], input[type="email"]').val('');
                        }
                    }
                });
                
            });
        });

        /* Filter for What We Do section
        ================================================== */
        $('.filter').each(function(){
            var tabLis = $(this).find('li');            
            var tabContent = $(this).parents('.filter-row').next().find('.row');
            tabContent.hide();
            tabLis.first().addClass('active');
            tabContent.first().show();
        });

        $('.filter').on('click', 'li', function(e) {
            var $this = $(this);
            var parentUL = $this.parent();
            // var tabContent = $('#option-section');
            var tabContent = $(this).parents('.filter-row').next();

            if($this.hasClass('active')) {
                return false;
            }

            parentUL.children().removeClass('active');
            $this.addClass('active');

            tabContent.find('.row').hide();
            var showById = $( $this.find('a').attr('href') );
            tabContent.find(showById).fadeIn(400, function(){
                
                $(this).find('.progress-bar > span').each(function(){
                
                    var $this = $(this);
                    var width = $this.data('percent');
                    $this.css('width', width + '%');
                });
                
                $(this).find('.chart').each(function(){
                    var $this = $(this);
                    var color = $this.data('scale-color');
                    
                    $this.easyPieChart({
                        barColor: color,
                        trackColor: '#c4c4c4',
                        onStep: function(from, to, percent) {
                            jQuery(this.el).find('.percent').text(Math.round(percent));
                        }
                    });
                    
                });
            });            

            e.preventDefault();
        });



        /* Filter for Home Blog Posts
        ================================================== */
        $('.filter-target li a').on('click', function(e){
                var $this = $(this);
                if($this.hasClass('active')) {
                    return false;
                } else {
                    $('.filter-target li').removeClass('active');
                    $this.parent().addClass('active');
                    var data_id = $this.attr("data-cat-id");
                    $("#more-posts").attr("data-cat-id", data_id); // data isnt updating so had to use attr
                }

                return false;
        });

        /* Portfolio Ajax
        ================================================== */
        $('.portfolio-wrapper').magnificPopup({
            delegate: '.block:not(.isotope-hidden) .portfolio-hover',
            closeMarkup:'', 
            closeBtnInside: false, 
            closeOnBgClick:false,
            type: 'ajax',
            fixedContentPos:false,
            mainClass: 'mfp-fade',
            midClick: true,
            gallery: {
                enabled: true, 
                preload: [0,2],
                arrowMarkup:'',
                navigateByImgClick: true,
                tCounter: '<span class="mfp-counter">%curr% of %total%</span>' // markup of counter
            },
            callbacks: {
                parseAjax: function(mfpResponse) {
                    mfpResponse.data = $(mfpResponse.data).siblings('#portfolio-single');
                },
                change: function() {
                    if (!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ){
                       // $.magnificPopup.instance.next = function () {return false}; 
                        //$.magnificPopup.instance.prev = function () {return false}; 
                    }
                },
                open: function() {
                    var main = $('section, footer, #header-section, .mbYTP_wrapper');
                    main.addClass('hide');
                    
                    var that = this;
                    
                    //listen for click events
                    that.contentContainer.on('click', '.close, .prev, .next', function(e) {
                        e.preventDefault();
                        
                        var $this = $(this);
                        
                        if ($this.hasClass('close')) {
                            that.close();
                        } else if($this.hasClass('prev')) {
                            that.prev();    
                        } else if($this.hasClass('next')) {
                            that.next();
                        }
                        
                        return false;
                    });
                },
                close: function() {
                    var main = $('section, footer, #header-section, .mbYTP_wrapper');
                    main.removeClass('hide');
                },
                afterClose: function() {
                    $(window).scrollTop(this.st.mainEl.offset().top - 150);
                }
            }

        });


        /* Isotope Portfolio
        ================================================== */
        var $container = $('.portfolio-wrapper');
        $container.isotope({
            itemSelector: '.block',
            layoutMode: 'sloppyMasonry',
            filter: '*',
            animationOptions: {
                duration: 750,
                easing: 'linear',
                queue: false
            }
        });


        /* Portfolio Filter */     
        $('.port-filter').each(function() {
            var $this = $(this);
            
            $this.on('click', 'a', function(){
                $this.find('li.active').removeClass('active');
                $(this).parent().addClass('active');
         
                var selector = $(this).attr('data-filter');
                $container.filter('#'+$this.attr('data-filter-id')).isotope({
                    filter: selector,
                    animationOptions: {
                        duration: 750,
                        easing: 'linear',
                        queue: false
                    }
                 });
                 return false;
            });
        });


        // Inside Blog Category - animate elements.
        $.fn.msSlider = function () { 
            var me = $(this);
            var eleWidth = me.width()
            var holder = me.find('ul');
            var scrollWidth = holder.prop("scrollWidth");
            var leftpos = 0;
            me.addClass('msSlider');
            me.find('.container').append('<a href="#" class="slide-move slide-left disabled"><i class="fa fa-angle-left"></i></a><a href="#" class="slide-move slide-right"><i class="fa fa-angle-right"></i></a>');
            holder.wrap('<div class="msWrapper">');
            if(holder.find(".active").position().left > holder.width()) {
                var leftpos = -(holder.find(".active").position().left - ($(me).find('ul').width() / 2));
                me.find('.slide-left').removeClass('disabled');
                holder.css("left",+ leftpos +'px');
            }

            if (scrollWidth <= eleWidth) {
                $('.slide-move').addClass('disabled');
                holder.css('width', '100%');
            }

            me.find('.slide-left').on('click', function (l) {
                l.preventDefault();

                if (!me.find('.slide-left').hasClass('disabled')) {
                    
                    leftpos = leftpos + (200);
                    if (!$(me).find('ul').is(':animated')) {
                        $(me).find('ul').stop().animate({ "left": leftpos + 'px' }, 300, function(){
                            lt_buttons();
                        });
                    }

                }
            });

            me.find('.slide-right').on('click', function (r) {
                r.preventDefault();

                if (!me.find('.slide-right').hasClass('disabled')) {
                    
                    leftpos = leftpos - (200);
                    if (!$(me).find('ul').is(':animated')) {
                        $(me).find('ul').stop().animate({ "left": leftpos + 'px' }, 300, function(){
                            lt_buttons();
                        });
                    }

                }
            });

            function lt_buttons() {
                
                if (holder.position().left >= 0 ) {
                    me.find('.slide-left').addClass('disabled');
                }
                else {
                    me.find('.slide-left').removeClass('disabled');
                }
                
                if (scrollWidth <= (Math.abs(holder.position().left) + $(me).find('ul').width())) {
                    me.find('.slide-right').addClass('disabled');
                } else {
                    me.find('.slide-right').removeClass('disabled');
                }
            };
        };

        if ($(".filter-slider").length > 0){
            $("#blog .filter-slider").msSlider();
        }


        /* Canvas
        ================================================== */
        var lastTime = 0;
        var vendors = ['ms', 'moz', 'webkit', 'o'];
        for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
            window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];
            window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame']
                || window[vendors[x]+'CancelRequestAnimationFrame'];
        }

        if (!window.requestAnimationFrame)
            window.requestAnimationFrame = function(callback, element) {
                var currTime = new Date().getTime();
                var timeToCall = Math.max(0, 16 - (currTime - lastTime));
                var id = window.setTimeout(function() { callback(currTime + timeToCall); },
                    timeToCall);
                lastTime = currTime + timeToCall;
                return id;
            };

        if (!window.cancelAnimationFrame)
            window.cancelAnimationFrame = function(id) {
                clearTimeout(id);
            };

        var width, height, canvas, ctx, circles, target, animateHeader = true;

        function initHeader() {
            width = window.innerWidth - 40;
            height = window.innerHeight;
            target = {x: 0, y: height};

            canvas = document.getElementById('hero-canvas');
            canvas.width = width;
            canvas.height = height;
            ctx = canvas.getContext('2d');

            // create particles
            circles = [];
            for(var x = 0; x < width*0.3; x++) {
                var c = new Circle();
                circles.push(c);
            }
            animate();
        }

        // Event handling
        function addListeners() {
            window.addEventListener('scroll', scrollCheck);
            window.addEventListener('resize', resize);
        }

        function scrollCheck() {
            if(document.body.scrollTop > height) animateHeader = false;
            else animateHeader = true;
        }

        function resize() {
            width = window.innerWidth;
            height = window.innerHeight;
            canvas.width = width;
            canvas.height = height;
        }

        function animate() {
            if(animateHeader) {
                ctx.clearRect(0,0,width,height);
                for(var i in circles) {
                    circles[i].draw();
                }
            }
            requestAnimationFrame(animate);
        }

        // Canvas manipulation
        function Circle() {
            var _this = this;

            // constructor
            (function() {
                _this.pos = {};
                init();
            })();

            function init() {
                _this.pos.x = Math.random()*width;
                _this.pos.y = height*Math.random();
                _this.alpha = 0.1+Math.random()*0.5;
                _this.scale = 0.1+Math.random()*0.3;
                _this.velocity = Math.random();
            }

            this.draw = function() {
                if(_this.alpha <= 0) {
                    init();
                }
                _this.pos.y -= _this.velocity;
                _this.alpha -= 0.0005;
                ctx.beginPath();
                ctx.arc(_this.pos.x, _this.pos.y, _this.scale*10, 0, 2 * Math.PI, false);
                ctx.fillStyle = 'rgba(255,255,255,'+ _this.alpha+')';
                ctx.fill();
            };
        }

        if($("#hero-canvas").length) { 
            // Run Canvas
            initHeader();
            addListeners();
        }

    });

    /* Count To Function
    ================================================== */
    $.fn.countTo = function (options) {
        options = options || {};
        
        return $(this).each(function () {
            // set options for current element
            var settings = $.extend({}, $.fn.countTo.defaults, {
                from:            $(this).data('from'),
                to:              $(this).data('to'),
                speed:           $(this).data('speed'),
                refreshInterval: $(this).data('refresh-interval'),
                decimals:        $(this).data('decimals')
            }, options);
            
            // how many times to update the value, and how much to increment the value on each update
            var loops = Math.ceil(settings.speed / settings.refreshInterval),
                increment = (settings.to - settings.from) / loops;
            
            // references & variables that will change with each update
            var self = this,
                $self = $(this),
                loopCount = 0,
                value = settings.from,
                data = $self.data('countTo') || {};
            
            $self.data('countTo', data);
            
            // if an existing interval can be found, clear it first
            if (data.interval) {
                clearInterval(data.interval);
            }
            data.interval = setInterval(updateTimer, settings.refreshInterval);
            
            // initialize the element with the starting value
            render(value);
            
            function updateTimer() {
                value += increment;
                loopCount++;
                
                render(value);
                
                if (typeof(settings.onUpdate) == 'function') {
                    settings.onUpdate.call(self, value);
                }
                
                if (loopCount >= loops) {
                    // remove the interval
                    $self.removeData('countTo');
                    clearInterval(data.interval);
                    value = settings.to;
                    
                    if (typeof(settings.onComplete) == 'function') {
                        settings.onComplete.call(self, value);
                    }
                }
            }
            
            function render(value) {
                var formattedValue = settings.formatter.call(self, value, settings);
                $self.html(formattedValue);
            }
        });
    };
    
    $.fn.countTo.defaults = {
        from: 0,               // the number the element should start at
        to: 0,                 // the number the element should end at
        speed: 1000,           // how long it should take to count between the target numbers
        refreshInterval: 100,  // how often the element should be updated
        decimals: 0,           // the number of decimal places to show
        formatter: formatter,  // handler for formatting the value before rendering
        onUpdate: null,        // callback method for every time the element is updated
        onComplete: null       // callback method for when the element finishes updating
    };
    
    function formatter(value, settings) {
        return value.toFixed(settings.decimals);
    }

    // relayout portfolio
    $(window).load(function() { 
        $('.portfolio-wrapper').isotope('reLayout'); 
    });

})(jQuery);